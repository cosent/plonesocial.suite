[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-5.x.cfg
    https://raw.githubusercontent.com/plone/plone.app.robotframework/master/versions.cfg

package-name = ploneintranet.suite
package-extras = [test]
test-eggs =
          ploneintranet.suite
          ploneintranet.microblog
          ploneintranet.activitystream
          ploneintranet.network
          ploneintranet.theme

parts +=
      flake8
      jenkins-test
      coverage

extensions =
    mr.developer

auto-checkout =
     plone.app.blocks
     ploneintranet.activitystream
     ploneintranet.core
     ploneintranet.messaging
     ploneintranet.microblog
     ploneintranet.network
     ploneintranet.theme
     ploneintranet.attachments

[sources]
ploneintranet.microblog        = git https://github.com/cosent/ploneintranet.microblog.git
ploneintranet.activitystream   = git https://github.com/cosent/ploneintranet.activitystream.git
ploneintranet.core             = git https://github.com/cosent/ploneintranet.core.git
ploneintranet.messaging        = git https://github.com/cosent/ploneintranet.messaging.git
ploneintranet.network          = git https://github.com/cosent/ploneintranet.network.git
ploneintranet.theme            = git https://github.com/cosent/ploneintranet.theme.git
plone.app.blocks             = git https://github.com/plone/plone.app.blocks.git
ploneintranet.attachments    = git https://github.com/ploneintranet/ploneintranet.attachments.git pushurl=git@github.com:ploneintranet/ploneintranet.attachments.git

[instance]
eggs +=
     Pillow
     ${buildout:auto-checkout}

zcml +=
     ${buildout:auto-checkout}


[test]
recipe = collective.xmltestreport
defaults = ['--auto-color', '--auto-progress', '--xml', '-v', '-s', 'ploneintranet.suite']
eggs +=
     Pillow
     ${buildout:auto-checkout}

zcml +=
     ${buildout:auto-checkout}

[versions]
setuptools=5.4.1
zc.buildout=2.2.5

[flake8]
recipe = zc.recipe.egg
eggs = flake8
       ${instance:eggs}
entry-points =
    flake8=flake8.run:main

[jenkins-test]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    # Remove old results
    echo "Erase old coverage results."
    bin/coverage erase
    # Collect test coverage results for all packages
    echo "Run test coverage analysis for all packages."
    bin/coverage run -p --source=src bin/test $@ || exit 1
    echo "Create test coverage report."
    # Combine all package analysis
    bin/coverage combine
    # Generates a "coverage.xml" file that Jenkins can read and process from the
    # ".coverage" file that the coverage report created.
    bin/coverage xml -i -o ${buildout:directory}/parts/test/coverage.xml
    echo "Test coverage report finished."

output = ${buildout:directory}/bin/jenkins-test
mode = 755

[coverage]
recipe = zc.recipe.egg
eggs = coverage

